name: Pre-submit tests

on:
  push:
    branches-ignore:
      - master
      - pr/*
  workflow_dispatch:
    inputs:
      platforms:
        description: "Platform(s) to execute on"
        required: true
        default: "Linux additional (hotspot only), Linux x64, Linux x86, Windows x64, Windows x86, macOS x64"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux_x64_build:
    name: Linux x64
    runs-on: "ubuntu-20.04"
    container:
      image: "centos:7"
    if: needs.prerequisites.outputs.should_run != 'false' && needs.prerequisites.outputs.platform_linux_x64 != 'false'

    strategy:
      fail-fast: false
      matrix:
        flavor:
          - build release
          - build debug
        include:
          - flavor: build debug
            flags: --enable-debug
            artifact: -debug

    env:
      JDK_VERSION: 1.8.0

    steps:
      - name: Checkout the source
        uses: actions/checkout@v4
        with:
          path: jdk
      - name: update yum
        run: |
          mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
          curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
      - name: Install dependencies
        run: |
          yum update -y
          yum install -y java-1.8.0-openjdk-devel gcc gcc-c++ libXrandr-devel libXtst-devel cups-devel alsa-lib-devel
          alternatives --install /usr/bin/gcc gcc /usr/bin/gcc 100 --slave /usr/bin/g++ g++ /usr/bin/g++

      - name: Configure
        run: >
          bash configure
          --with-conf-name=linux-x64
          ${{ matrix.flags }}
          --with-user-release-suffix=${GITHUB_ACTOR}-${GITHUB_SHA}
          --with-build-number=b00
          --with-zlib=bundled
        working-directory: jdk

      - name: Build
        run: make CONF_NAME=linux-x64 LOG_LEVEL=debug images
        working-directory: jdk

      - name: Pack artifacts
        run: |
          tar -czf jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin${{ matrix.artifactÂ }}.tar.gz -C jdk/build/linux-x64/images j2sdk-image


