name: Pre-submit tests

on:
  push:
    branches-ignore:
      - master
      - pr/*
  workflow_dispatch:
    inputs:
      platforms:
        description: "Platform(s) to execute on"
        required: true
        default: "Linux additional (hotspot only), Linux x64, Linux x86, Windows x64, Windows x86, macOS x64"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux_x64_build:
    name: Linux x64
    runs-on: "ubuntu-20.04"
    container:
      image: "centos:7"
    if: needs.prerequisites.outputs.should_run != 'false' && needs.prerequisites.outputs.platform_linux_x64 != 'false'

    strategy:
      fail-fast: false
      matrix:
        flavor:
          - build release
          - build debug
        include:
          - flavor: build debug
            flags: --enable-debug
            artifact: -debug

    env:
      JDK_VERSION: "${{ fromJson(needs.prerequisites.outputs.dependencies).JDK_MAJOR_VERSION }}.${{ fromJson(needs.prerequisites.outputs.dependencies).JDK_MINOR_VERSION }}.${{ fromJson(needs.prerequisites.outputs.dependencies).JDK_MICRO_VERSION }}"

    steps:
#      - name: Checkout the source
#        uses: actions/checkout@v4
#        with:
#          path: jdk
#
#      - name: Restore jtreg artifact
#        id: jtreg_restore
#        uses: actions/download-artifact@v4
#        with:
#          name: transient_jtreg_${{ needs.prerequisites.outputs.bundle_id }}
#          path: ~/jtreg/
#        continue-on-error: true
#
#      - name: Restore jtreg artifact (retry)
#        uses: actions/download-artifact@v4
#        with:
#          name: transient_jtreg_${{ needs.prerequisites.outputs.bundle_id }}
#          path: ~/jtreg/
#        if: steps.jtreg_restore.outcome == 'failure'
#
#      - name: Fix jtreg permissions
#        run: chmod -R a+rx ${HOME}/jtreg/

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install openjdk-8-jdk gcc-9 g++-9 libxrandr-dev libxtst-dev libcups2-dev libasound2-dev
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 --slave /usr/bin/g++ g++ /usr/bin/g++-9

      - name: Configure
        run: >
          bash configure
          --with-conf-name=linux-x64
          ${{ matrix.flags }}
          --with-user-release-suffix=${GITHUB_ACTOR}-${GITHUB_SHA}
          --with-build-number=b00
          --with-jtreg=${HOME}/jtreg
          --with-zlib=bundled
        working-directory: jdk

      - name: Build
        run: make CONF_NAME=linux-x64 LOG_LEVEL=debug images
        working-directory: jdk

      - name: Pack artifacts
        run: |
          tar -czf jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin${{ matrix.artifact }}.tar.gz -C jdk/build/linux-x64/images j2sdk-image

#      - name: Persist test bundles
#        uses: actions/upload-artifact@v4
#        with:
#          name: transient_jdk-linux-x64${{ matrix.artifact }}_${{ needs.prerequisites.outputs.bundle_id }}
#          path: |
#            jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin${{ matrix.artifact }}.tar.gz
#

